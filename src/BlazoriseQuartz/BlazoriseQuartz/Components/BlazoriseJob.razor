@using Blazorise.Components
@using Microsoft.AspNetCore.Mvc.Rendering
<div class="jobform">
    <Form>
        <Validations @ref="_validations" Mode="ValidationMode.Auto" Model="@JobDetail" StatusChanged="OnSetIsValid">
            <div class="jobform__2col">
                <Validation AsyncValidator="ValidateJobName">
                    <Field>
                        <FieldLabel RequiredIndicator="true" For="JobDetail.Name">Job Name</FieldLabel>
                        <FieldBody>
                            <TextEdit @bind-Text="JobDetail.Name"
                                      Immediate="true"
                                      Margin="Margin.Is0"
                                      ReadOnly="IsReadOnly">
                                <Feedback>
                                    <ValidationError>Job name already in used. Please choose another name or group.</ValidationError>
                                </Feedback>
                            </TextEdit>
                        </FieldBody>
                    </Field>
                </Validation>

                <Field>
                    <FieldLabel RequiredIndicator="true">Job Group</FieldLabel>
                    <FieldBody>
                        <Autocomplete TItem="SelectListItem"
                                      TValue="string"
                                      SelectedValue="@JobDetail.Group"
                                      Data="ExistingJobGroups"
                                      TextField="@((item) => item.Text)"
                                      ValueField="@((item) => item.Value)"
                                      ReadData="GetJobGroups"
                                      Placeholder="Search..."
                                      Filter="AutocompleteFilter.Contains"
                                      FreeTyping
                                      CustomFilter="@(( item, searchValue ) => item.Text.IndexOf( searchValue, 0, StringComparison.CurrentCultureIgnoreCase ) >= 0 )">
                            <NotFoundContent> Sorry... @context was not found! :( </NotFoundContent>
                        </Autocomplete>
                    </FieldBody>
                </Field>
            </div>

            <Validation Validator="@ValidationRule.IsSelected">
                <Field>
                    <FieldLabel RequiredIndicator="true">Job Class</FieldLabel>
                    <FieldBody>
                        <Select TValue="string"
                                ReadOnly="IsReadOnly"
                                SelectedValue="@JobDetail.JobClass?.FullName"
                                SelectedValueChanged="@OnJobClassValueChanged"
                                Margin="Margin.Is0">
                            <ChildContent>
                                @foreach (var cls in @AvailableJobTypes)
                                {
                                    <SelectItem TValue="string" Value="cls.FullName">@cls.FullName</SelectItem>
                                }
                            </ChildContent>
                            <Feedback>
                                <ValidationError>Select one value!</ValidationError>
                            </Feedback>
                        </Select>
                    </FieldBody>
                </Field>
            </Validation>

            <Field>
                <FieldLabel For="JobDetail.Description">Description</FieldLabel>
                <FieldBody>
                    <MemoEdit @bind-Text="JobDetail.Description"
                              Rows="2"
                              Immediate="true"
                              Margin="Margin.Is0"
                              ReadOnly="IsReadOnly" />
                </FieldBody>
            </Field>

            @if (JobUIType != null)
            {
                <DynamicComponent Type="@JobUIType" Parameters="@JobUITypeParameters" @ref="_jobUIComponent" />
            }

            <Tooltip Text="When checked, job will remain in scheduler after trigger ends">
                <Check TValue="bool" @bind-Checked="JobDetail.IsDurable" ReadOnly="IsReadOnly">Do not remove job after trigger ends</Check>
            </Tooltip>
        </Validations>
    </Form>
</div>